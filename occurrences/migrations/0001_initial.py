# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-02-10 14:19
from __future__ import unicode_literals

import db.fields
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('db', '0008_documentid_owner'),
    ]

    operations = [
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('revision', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='db.Revision')),
                ('is_tip', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('identity_alt', models.CharField(blank=True, max_length=256, null=True)),
                ('when', models.CharField(blank=True, max_length=256, null=True)),
                ('location', django.contrib.gis.db.models.fields.PolygonField(geography=True, null=True, srid=4326)),
                ('where', models.CharField(blank=True, max_length=256, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_cultivated', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_author', to='db.DocumentID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db.DocumentID')),
                ('identity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_identity', to='db.DocumentID')),
                ('images', db.fields.ManyToManyField(related_name='occurrence_image', to='db.DocumentID')),
            ],
            options={
                'abstract': False,
                'ordering': ('document_id',),
            },
            managers=[
                ('objects_revisions', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('revision', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='db.Revision')),
                ('is_tip', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_correct', models.NullBooleanField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestion_author', to='db.DocumentID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db.DocumentID')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestion_identity', to='db.DocumentID')),
                ('whatisthis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestion_occurrence', to='db.DocumentID')),
            ],
            options={
                'abstract': False,
                'ordering': ('document_id',),
            },
            managers=[
                ('objects_revisions', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='suggestion',
            unique_together=set([('is_tip', 'document')]),
        ),
        migrations.AlterUniqueTogether(
            name='occurrence',
            unique_together=set([('is_tip', 'document')]),
        ),
    ]
